install.packages("klaR")
library(klaR)
library(klaR)
install.packages("ggplot2")
install.packages("klaR")
library(klaR)
library("ggplot2", lib.loc="~/R/win-library/3.5")
library(ggplot2)
install.packages("klaR")
library(klaR)
library(ISLR)
install.packages("ISLR")
library(ISLR)
View(Carseats)
summary(carseats)
summary(Carseats)
attach(Carseats)
Carseats$Sales
Sales
library(tree)
install.packages("tree")
library(tree)
library("klaR", lib.loc="~/R/win-library/3.5")
detach("package:klaR", unload=TRUE)
tree_carseats <- tree(Sales~.)
tree_carseats <- tree(Sales~., data = Carseats)
summary(tree_carseats)
plot(tree_carseats)
text(tree_carseats)
text(tree_carseats, pretty = 0)
text(tree_carseats, pretty = 1)
text(tree_carseats, pretty = 1200)
text(tree_carseats)
text(tree_carseats)
plot(tree_carseats)
text(tree_carseats)
text(tree_carseats, pretty = 0)
plot(tree_carseats)
text(tree_carseats)
tree_carseats
train=sample(tree_carseats, 200, replace = FALSE)
train=sample(nrow(Carseats), 200, replace = FALSE)
tree_carseats <- tree(Sales~., data = Carseats, subset = train)
carseats_test <- Carseats[-train,]
tree_pred <- predict(tree_carseats, carseats_test)
View(tree_pred)
mean(tree_pred == Carseats$Sales[train])
mean(tree_pred == Carseats$Sales[-train])
MSE <- mean(tree_pred - Carseats$Sales[train])
MSE
##however some are positive some are negative
MSE <- mean((tree_pred - Carseats$Sales[train])^2)
MSE
sqrt(MSE)
sqrt(MSE)
##however some are positive some are negative
MSE <- mean((tree_pred - Carseats$Sales[-train])^2)
sqrt(MSE)
plot(tree_pred , Carseats$Sales[-train])
abline(0,1)
cv_carseats <- cv.tree(tree_carseats)
cv_carseats
par(mfrow=c(1,2))
plot(cv_carseats$size, cv_carseats$dev)
plot(cv_carseats$size, cv_carseats$dev, type = "b")
plot(cv_carseats$size, cv_carseats$dev, type = "b")
plot(cv_carseats$size, cv_carseats$k, type = "b")
prune_carseats  <- prune.tree(tree_carseats, best = 13)
plot(prune_carseats)
test(prune_carseats)
text(prune_carseats)
par(mfrow=c(1,1))
plot(prune_carseats)
text(prune_carseats)
text(prune_carseats, pretty = 0)
plot(prune_carseats)
text(prune_carseats, pretty = 0)
plot(prune_carseats)
text(prune_carseats, pretty = 12)
tree_pred <- predict(prune_carseats, carseatsSales[-train])
tree_pred <- predict(prune_carseats, CarseatsSales[-train])
tree_pred <- predict(prune_carseats, Carseats[-train])
MSE <- mean((tree_pred - Carseats$Sales[-train])^2)
sqrt(MSE)
tree_pred <- predict(prune_carseats, Carseats$Sales[-train])
tree_pred <- predict(prune_carseats, Carseats[-train])
MSE <- mean((tree_pred - Carseats$Sales[-train])^2)
sqrt(MSE)
sqrt(MSE)
tree_pred <- predict(prune_carseats, Carseats[-train])
MSE <- mean((tree_pred - Carseats$Sales[-train])^2)
sqrt(MSE)
prune_carseats  <- prune.tree(tree_carseats, best = 13)
tree_pred <- predict(prune_carseats, Carseats[-train])
MSE <- mean((tree_pred - Carseats$Sales[-train])^2)
sqrt(MSE)
train=sample(nrow(Carseats), 200, replace = FALSE)
tree_carseats <- tree(Sales~., data = Carseats, subset = train)
carseats_test <- Carseats[-train,]
tree_pred <- predict(tree_carseats, carseats_test)
View(tree_pred)
mean(tree_pred == Carseats$Sales[-train])
MSE <- mean(tree_pred - Carseats$Sales[-train])
##however some are positive some are negative
MSE <- mean((tree_pred - Carseats$Sales[-train])^2)
sqrt(MSE)
plot(tree_pred , Carseats$Sales[-train])
abline(0,1)
cv_carseats <- cv.tree(tree_carseats)
cv_carseats
par(mfrow=c(1,2))
plot(cv_carseats$size, cv_carseats$dev)
plot(cv_carseats$size, cv_carseats$k, type = "b")
prune_carseats  <- prune.tree(tree_carseats, best = 13)
par(mfrow=c(1,1))
plot(prune_carseats)
text(prune_carseats, pretty = 12)
tree_pred <- predict(prune_carseats, Carseats[-train])
MSE <- mean((tree_pred - Carseats$Sales[-train])^2)
sqrt(MSE)
high <- ifelse(Sales <= 8, "No", "Yes")
high
high <- ifelse(Sales <= 8, "No", "Yes")
carseats2 <- data.frame(Carseats, high)
View(carseats2)
tree_carseats <- tree(high~. - Sales, data = carseats2)
tree_carseats
summary(tree_carseats)
plot(tree_ca)
plot(tree_carseats
plot(tree_carseats)
plot(tree_carseats)
text(tree_carseats)
plot(tree_carseats)
text(tree_carseats, pretty = 0)
set.seed(2)
train <- sample(nrow(carseat2), 200, replace = FALSE)
train <- sample(nrow(carseats2), 200, replace = FALSE)
carseats_test <- carseats2[-train]
high_test <- high[-train]
tree_pred <- predict(tree_carseats, carseats_test,type = "class")
tree_pred
mean(tree_pred == high_test)
table(tree_pred, high_testh)
table(tree_pred, high_test)
tree_carseats <- tree(high~.-Sales, carseats2, subset = train)
tree_pred <- predict(tree_carseats, carseats_test,type = "class")
tree_pred
mean(tree_pred == high_test)
table(tree_pred, high_test)
carseats_test <- carseats2[-train,]
high_test <- high[-train]
tree_carseats <- tree(high~.-Sales, carseats2, subset = train)
tree_pred <- predict(tree_carseats, carseats_test,type = "class")
tree_pred
mean(tree_pred == high_test)
table(tree_pred, high_test)
set.seed(2)
train <- sample(nrow(carseats2), 200, replace = FALSE)
carseats_test <- carseats2[-train,]
high_test <- high[-train]
tree_carseats <- tree(high~.-Sales, carseats2, subset = train)
tree_pred <- predict(tree_carseats, carseats_test,type = "class")
tree_pred
mean(tree_pred == high_test)
table(tree_pred, high_test)
updateR()
# homework assignment
# what I want to first do is gather all of the symbols that I am working with, and then set up a date structure so it is between 2005 and
# september 9 2019. after I gathered the companies with the correct dates, I set up vectors and used them to calculate my
# ROI and test with the first company (AAPL)
# After I confirm it works, I use the forloop.
# I made a data.frame to list the symbols/companies that we are using, followed by the mean daily return, sd of daily return, and the ROI
# to make it smoother and easier to read
library(dplyr)
library(ggplot2)
library(plotly)
# Libraries ---------------------------------------------------------------
library(tidyverse)
install.packages('tidyverse')
# Set working directory ---------------------------------------------------
setwd("D:/OneDrive/Notes/Winter 2021/OPMA 419/Group Project 1")
# Importing Data ----------------------------------------------------------
mcmenu <- read.csv("menu.csv")
View(mcmenu)
library(janitor)
install.packages("janitor")
library(janitor)
# Importing Data ----------------------------------------------------------
mcmenu <- read.csv("menu.csv") %>%
clean_names()
# Importing Data ----------------------------------------------------------
mcmenu <- read.csv("menu.csv") %>%
clean_names() %>%
select(category, item, price, serving_size, calories, calories_from_fat, total_fat, protein, carbohydrates,
everything())
# Libraries ---------------------------------------------------------------
library(tidyverse)
# Importing Data ----------------------------------------------------------
mcmenu <- read.csv("menu.csv") %>%
clean_names() %>%
select(category, item, price, serving_size, calories, calories_from_fat, total_fat, protein, carbohydrates,
everything())
# Adding Protein and Carb Calories (Approximate) --------------------------
# The dataset already has a recorded calories from fat column, so we are going to approximate calories from carbs and
# calories from protein using the following values
# https://www.nal.usda.gov/fnic/how-many-calories-are-one-gram-fat-carbohydrate-or-protein - reference
# 9 calories per gram of fat (not needed), 4 calories per gram of carbs, 4 calories per gram of protein
mcmenu_1 <- mcmenu %>%
mutate(calories_from_pro = protein*4,
calories_from_carb = carbohydrates*4
)
# Adding Protein and Carb Calories (Approximate) --------------------------
# The dataset already has a recorded calories from fat column, so we are going to approximate calories from carbs and
# calories from protein using the following values
# https://www.nal.usda.gov/fnic/how-many-calories-are-one-gram-fat-carbohydrate-or-protein - reference
# 9 calories per gram of fat (not needed), 4 calories per gram of carbs, 4 calories per gram of protein
mcmenu_1 <- mcmenu %>%
mutate(calories_from_pro = protein*4,
calories_from_carb = carbohydrates*4
) %>%
select(category, item, price, serving_size, calories,
calories_from_fat, calories_from_pro, calories_from_carb,
total_fat, protein, carbohydrates,
everything())
View(mcmenu_1)
# Adding Protein and Carb Calories (Approximate) --------------------------
# The dataset already has a recorded calories from fat column, so we are going to approximate calories from carbs and
# calories from protein using the following values
# https://www.nal.usda.gov/fnic/how-many-calories-are-one-gram-fat-carbohydrate-or-protein - reference
# 9 calories per gram of fat (not needed), 4 calories per gram of carbs, 4 calories per gram of protein
mcmenu_1 <- mcmenu %>%
mutate(calories_from_pro = protein*4,
calories_from_carb = carbohydrates*4,
total_calories_test = sum(calories_from_pro, calories_from_carb, calories_from_fat)
) %>%
select(category, item, price, serving_size, calories, total_calories_test
calories_from_fat, calories_from_pro, calories_from_carb,
total_fat, protein, carbohydrates,
everything())
# Adding Protein and Carb Calories (Approximate) --------------------------
# The dataset already has a recorded calories from fat column, so we are going to approximate calories from carbs and
# calories from protein using the following values
# https://www.nal.usda.gov/fnic/how-many-calories-are-one-gram-fat-carbohydrate-or-protein - reference
# 9 calories per gram of fat (not needed), 4 calories per gram of carbs, 4 calories per gram of protein
mcmenu_1 <- mcmenu %>%
mutate(calories_from_pro = protein*4,
calories_from_carb = carbohydrates*4,
total_calories_test = sum(calories_from_pro, calories_from_carb, calories_from_fat)
) %>%
select(category, item, price, serving_size, calories, total_calories_test,
calories_from_fat, calories_from_pro, calories_from_carb,
total_fat, protein, carbohydrates,
everything())
View(mcmenu_1)
# Adding Protein and Carb Calories (Approximate) --------------------------
# The dataset already has a recorded calories from fat column, so we are going to approximate calories from carbs and
# calories from protein using the following values
# https://www.nal.usda.gov/fnic/how-many-calories-are-one-gram-fat-carbohydrate-or-protein - reference
# 9 calories per gram of fat (not needed), 4 calories per gram of carbs, 4 calories per gram of protein
mcmenu_1 <- mcmenu %>%
mutate(calories_from_pro = protein*4,
calories_from_carb = carbohydrates*4,
total_calories_test = sum(calories_from_pro, calories_from_carb, calories_from_fat)
) %>%
select(category, item, price, serving_size, calories, total_calories_test,
calories_from_fat, calories_from_pro, calories_from_carb,
total_fat, protein, carbohydrates,
everything())
View(mcmenu_1)
# Adding Protein and Carb Calories (Approximate) --------------------------
# The dataset already has a recorded calories from fat column, so we are going to approximate calories from carbs and
# calories from protein using the following values
# https://www.nal.usda.gov/fnic/how-many-calories-are-one-gram-fat-carbohydrate-or-protein - reference
# 9 calories per gram of fat (not needed), 4 calories per gram of carbs, 4 calories per gram of protein
mcmenu_1 <- mcmenu %>%
mutate(calories_from_pro = protein*4,
calories_from_carb = carbohydrates*4,
total_calories_test = sum(calories_from_pro, calories_from_carb, calories_from_fat)
) %>%
select(category, item, price, serving_size, calories, total_calories_test,
calories_from_fat, calories_from_pro, calories_from_carb,
total_fat, protein, carbohydrates,
everything())
# Adding Protein and Carb Calories (Approximate) --------------------------
# The dataset already has a recorded calories from fat column, so we are going to approximate calories from carbs and
# calories from protein using the following values
# https://www.nal.usda.gov/fnic/how-many-calories-are-one-gram-fat-carbohydrate-or-protein - reference
# 9 calories per gram of fat (not needed), 4 calories per gram of carbs, 4 calories per gram of protein
mcmenu_1 <- mcmenu %>%
mutate(calories_from_pro = protein*4,
calories_from_carb = carbohydrates*4) %>%
mutate(total_calories_test = sum(calories_from_pro, calories_from_carb, calories_from_fat)
) %>%
select(category, item, price, serving_size, calories, total_calories_test,
calories_from_fat, calories_from_pro, calories_from_carb,
total_fat, protein, carbohydrates,
everything())
# Adding Protein and Carb Calories (Approximate) --------------------------
# The dataset already has a recorded calories from fat column, so we are going to approximate calories from carbs and
# calories from protein using the following values
# https://www.nal.usda.gov/fnic/how-many-calories-are-one-gram-fat-carbohydrate-or-protein - reference
# 9 calories per gram of fat (not needed), 4 calories per gram of carbs, 4 calories per gram of protein
mcmenu_1 <- mcmenu %>%
mutate(calories_from_pro = protein*4,
calories_from_carb = carbohydrates*4) %>%
mutate(total_calories_test = calories_from_pro + calories_from_carb +calories_from_fat)
# Adding Protein and Carb Calories (Approximate) --------------------------
# The dataset already has a recorded calories from fat column, so we are going to approximate calories from carbs and
# calories from protein using the following values
# https://www.nal.usda.gov/fnic/how-many-calories-are-one-gram-fat-carbohydrate-or-protein - reference
# 9 calories per gram of fat (not needed), 4 calories per gram of carbs, 4 calories per gram of protein
mcmenu_1 <- mcmenu %>%
mutate(calories_from_pro = protein*4,
calories_from_carb = carbohydrates*4) %>%
mutate(total_calories_test = calories_from_pro + calories_from_carb +calories_from_fat)
# Adding Protein and Carb Calories (Approximate) --------------------------
# The dataset already has a recorded calories from fat column, so we are going to approximate calories from carbs and
# calories from protein using the following values
# https://www.nal.usda.gov/fnic/how-many-calories-are-one-gram-fat-carbohydrate-or-protein - reference
# 9 calories per gram of fat (not needed), 4 calories per gram of carbs, 4 calories per gram of protein
mcmenu_1 <- mcmenu %>%
mutate(calories_from_pro = protein*4,
calories_from_carb = carbohydrates*4) %>%
mutate(total_calories_test = calories_from_pro + calories_from_carb +calories_from_fat) %>%
select(category, item, price, serving_size, calories, total_calories_test,
calories_from_fat, calories_from_pro, calories_from_carb,
total_fat, protein, carbohydrates,
everything())
mcmenu_1$calories - mcmenu_1$total_calories_test
mean(mcmenu_1$calories - mcmenu_1$total_calories_test)
install.packages('xlsx')
library(xlsx)
# Write to Excel Sheet ----------------------------------------------------
write.xlsx(mcmenu_1, row.names = F)
# Write to Excel Sheet ----------------------------------------------------
write.xlsx(mcmenu_1, "mcmenu.xlsx" row.names = F)
# Write to Excel Sheet ----------------------------------------------------
write.xlsx(mcmenu_1, "mcmenu.xlsx", row.names = F)
# OPMA 419 Group Project 1
# Benjamin LeBlanc, Shaan Gehlot, and Nevin Sangha
# McDonald's Protein Bang for your Buck Visualization's
# Press 'Alt' + 'o' keys (not zero) to view (close) all sections
# Press 'Shift' + 'Alt' + 'o' to open all sections
# Libraries ---------------------------------------------------------------
library(tidyverse)
library(janitor)
library(xlsx)
# Set working directory ---------------------------------------------------
setwd("D:/OneDrive/Notes/Winter 2021/OPMA 419/Group Project 1")
# Importing Data ----------------------------------------------------------
mcmenu <- read.csv("menu.csv") %>%
clean_names() %>%
select(category, item, price, serving_size, calories, calories_from_fat, total_fat, protein, carbohydrates,
everything())
# Adding Protein and Carb Calories (Approximate) --------------------------
# The dataset already has a recorded calories from fat column, so we are going to approximate calories from carbs and
# calories from protein using the following values
# https://www.nal.usda.gov/fnic/how-many-calories-are-one-gram-fat-carbohydrate-or-protein - reference
# 9 calories per gram of fat (not needed), 4 calories per gram of carbs, 4 calories per gram of protein
mcmenu_1 <- mcmenu %>%
mutate(calories_from_pro = protein*4,
calories_from_carb = carbohydrates*4) %>%
mutate(total_calories_test = calories_from_pro + calories_from_carb +calories_from_fat) %>%
select(category, item, price, serving_size, calories, total_calories_test,
calories_from_fat, calories_from_pro, calories_from_carb,
total_fat, protein, carbohydrates,
everything())
# Write to Excel Sheet ----------------------------------------------------
write.xlsx(mcmenu_1, "mcmenu.xlsx", row.names = F)
# OPMA 419 Group Project 1
# Benjamin LeBlanc, Shaan Gehlot, and Nevin Sangha
# McDonald's Protein Bang for your Buck Visualization's
# Press 'Alt' + 'o' keys (not zero) to view (close) all sections
# Press 'Shift' + 'Alt' + 'o' to open all sections
# Libraries ---------------------------------------------------------------
library(tidyverse)
library(janitor)
library(xlsx)
# Set working directory ---------------------------------------------------
setwd("D:/OneDrive/Notes/Winter 2021/OPMA 419/Group Project 1")
# Importing Data ----------------------------------------------------------
mcmenu <- read.csv("menu.csv") %>%
clean_names() %>%
select(category, item, price, serving_size, calories, calories_from_fat, total_fat, protein, carbohydrates,
everything())
# Adding Protein and Carb Calories (Approximate) --------------------------
# The dataset already has a recorded calories from fat column, so we are going to approximate calories from carbs and
# calories from protein using the following values
# https://www.nal.usda.gov/fnic/how-many-calories-are-one-gram-fat-carbohydrate-or-protein - reference
# 9 calories per gram of fat (not needed), 4 calories per gram of carbs, 4 calories per gram of protein
mcmenu_1 <- mcmenu %>%
mutate(calories_from_pro = protein*4,
calories_from_carb = carbohydrates*4) %>%
mutate(total_calories_test = calories_from_pro + calories_from_carb +calories_from_fat) %>%
select(category, item, price, serving_size, calories, total_calories_test,
calories_from_fat, calories_from_pro, calories_from_carb,
total_fat, protein, carbohydrates,
everything())
# Write to Excel Sheet ----------------------------------------------------
write.xlsx(mcmenu_1, "mcmenu.xlsx", row.names = F)
# Libraries ---------------------------------------------------------------
library(tidyverse)
library(janitor)
library(xlsx)
library(tidyverse)
detach("package:tidyverse", unload = TRUE)
# Libraries ---------------------------------------------------------------
library(tidyverse)
library(janitor)
library(xlsx)
install.packages("tidyverse")
install.packages("janitor")
install.packages("xlsx")
# OPMA 419 Group Project 1
# Benjamin LeBlanc, Shaan Gehlot, and Nevin Sangha
# McDonald's Protein Bang for your Buck Visualization's
# Press 'Alt' + 'o' keys (not zero) to view (close) all sections
# Press 'Shift' + 'Alt' + 'o' to open all sections
# Libraries ---------------------------------------------------------------
library(tidyverse)
library(janitor)
library(xlsx)
# Set working directory ---------------------------------------------------
setwd("D:/OneDrive/Notes/Winter 2021/OPMA 419/Group Project 1")
# Importing Data ----------------------------------------------------------
mcmenu <- read.csv("menu.csv") %>%
clean_names() %>%
select(category, item, price, serving_size, calories, calories_from_fat, total_fat, protein, carbohydrates,
everything())
# Adding Protein and Carb Calories (Approximate) --------------------------
# The dataset already has a recorded calories from fat column, so we are going to approximate calories from carbs and
# calories from protein using the following values
# https://www.nal.usda.gov/fnic/how-many-calories-are-one-gram-fat-carbohydrate-or-protein - reference
# 9 calories per gram of fat (not needed), 4 calories per gram of carbs, 4 calories per gram of protein
mcmenu_1 <- mcmenu %>%
mutate(calories_from_pro = protein*4,
calories_from_carb = carbohydrates*4) %>%
mutate(total_calories_test = calories_from_pro + calories_from_carb +calories_from_fat) %>%
select(category, item, price, serving_size, calories, total_calories_test,
calories_from_fat, calories_from_pro, calories_from_carb,
total_fat, protein, carbohydrates,
everything())
# Write to Excel Sheet ----------------------------------------------------
write.xlsx(mcmenu_1, "mcmenu.xlsx", row.names = F)
install.packages(c("backports", "BH", "bit", "bit64", "broom", "callr", "chron", "cld2", "cli", "clipr", "coda", "colorspace", "cowplot", "crayon", "crosstalk", "data.table", "DBI", "dbplyr", "digest", "dplyr", "ellipsis", "fansi", "forcats", "formattable", "Formula", "fs", "gargle", "generics", "GGally", "ggplot2", "ggrepel", "gh", "git2r", "glue", "googledrive", "googlesheets4", "haven", "hexbin", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httr", "hunspell", "isoband", "ISOcodes", "jsonlite", "kableExtra", "knitr", "koRpus", "koRpus.lang.en", "labeling", "lme4", "lubridate", "magrittr", "matrixStats", "memoise", "mgsub", "modelr", "network", "NLP", "odbc", "openssl", "openxlsx", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plotly", "processx", "ps", "purrr", "quanteda", "quantmod", "quantreg", "R6", "rappdirs", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "readr", "rematch2", "reprex", "reshape2", "reticulate", "rlang", "rmarkdown", "rprojroot", "RSQLite", "rstudioapi", "rvest", "scales", "slam", "sna", "sp", "statmod", "statnet.common", "stopwords", "stringdist", "stringi", "sylly", "sys", "syuzhet", "testthat", "tibble", "tidyr", "tidytext", "tinytex", "tm", "usethis", "vctrs", "withr", "writexl", "xfun", "xml2", "zip", "zoo"))
# OPMA 419 Group Project 1
# Benjamin LeBlanc, Shaan Gehlot, and Nevin Sangha
# McDonald's Protein Bang for your Buck Visualization's
# Press 'Alt' + 'o' keys (not zero) to view (close) all sections
# Press 'Shift' + 'Alt' + 'o' to open all sections
# Libraries ---------------------------------------------------------------
library(tidyverse)
library(janitor)
library(xlsx)
# Set working directory ---------------------------------------------------
setwd("D:/OneDrive/Notes/Winter 2021/OPMA 419/Group Project 1")
# Importing Data ----------------------------------------------------------
mcmenu <- read.csv("menu.csv") %>%
clean_names() %>%
select(category, item, price, serving_size, calories, calories_from_fat, total_fat, protein, carbohydrates,
everything())
# Adding Protein and Carb Calories (Approximate) --------------------------
# The dataset already has a recorded calories from fat column, so we are going to approximate calories from carbs and
# calories from protein using the following values
# https://www.nal.usda.gov/fnic/how-many-calories-are-one-gram-fat-carbohydrate-or-protein - reference
# 9 calories per gram of fat (not needed), 4 calories per gram of carbs, 4 calories per gram of protein
mcmenu_1 <- mcmenu %>%
mutate(calories_from_pro = protein*4,
calories_from_carb = carbohydrates*4) %>%
mutate(total_calories_test = calories_from_pro + calories_from_carb +calories_from_fat) %>%
select(category, item, price, serving_size, calories, total_calories_test,
calories_from_fat, calories_from_pro, calories_from_carb,
total_fat, protein, carbohydrates,
everything())
# Write to Excel Sheet ----------------------------------------------------
write.xlsx(mcmenu_1, "mcmenu.xlsx", row.names = F)
install.packages('write_xlsx')
install.packages('writexl')
# OPMA 419 Group Project 1
# Benjamin LeBlanc, Shaan Gehlot, and Nevin Sangha
# McDonald's Protein Bang for your Buck Visualization's
# Press 'Alt' + 'o' keys (not zero) to view (close) all sections
# Press 'Shift' + 'Alt' + 'o' to open all sections
# Libraries ---------------------------------------------------------------
library(tidyverse)
library(janitor)
library(writexl)
# Set working directory ---------------------------------------------------
setwd("D:/OneDrive/Notes/Winter 2021/OPMA 419/Group Project 1")
# Importing Data ----------------------------------------------------------
mcmenu <- read.csv("menu.csv") %>%
clean_names() %>%
select(category, item, price, serving_size, calories, calories_from_fat, total_fat, protein, carbohydrates,
everything())
# Adding Protein and Carb Calories (Approximate) --------------------------
# The dataset already has a recorded calories from fat column, so we are going to approximate calories from carbs and
# calories from protein using the following values
# https://www.nal.usda.gov/fnic/how-many-calories-are-one-gram-fat-carbohydrate-or-protein - reference
# 9 calories per gram of fat (not needed), 4 calories per gram of carbs, 4 calories per gram of protein
mcmenu_1 <- mcmenu %>%
mutate(calories_from_pro = protein*4,
calories_from_carb = carbohydrates*4) %>%
mutate(total_calories_test = calories_from_pro + calories_from_carb +calories_from_fat) %>%
select(category, item, price, serving_size, calories, total_calories_test,
calories_from_fat, calories_from_pro, calories_from_carb,
total_fat, protein, carbohydrates,
everything())
# Write to Excel Sheet ----------------------------------------------------
writexl::write_xlsx(mcmenu_1, "mcmenu.xlsx", row.names = F)
# Write to Excel Sheet ----------------------------------------------------
writexl::write_xlsx(mcmenu_1, "mcmenu.xlsx")
